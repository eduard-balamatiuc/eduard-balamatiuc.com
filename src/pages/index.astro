---
import "../styles/global.css";
import Header from "../components/Header.astro";
import fs from 'node:fs';
import path from 'node:path';

const pageTitle = "Eduard Balamatiuc";

// Define interfaces for dispatch data
interface DispatchFile {
  slug: string;
  title: string;
  date: string;
  filePath: string;
}

// Function to read the first line of the file to get the title
function getFirstLine(filePath: string): string {
  try {
    const content = fs.readFileSync(filePath, 'utf-8');
    const firstLine = content.split('\n')[0].trim();
    return firstLine || "Untitled Dispatch"; // Fallback if empty
  } catch (error) {
    console.error(`Error reading file ${filePath}:`, error);
    return "Untitled Dispatch";
  }
}

const dispatchesDir = path.join(process.cwd(), 'src/pages/dispatches');
const dispatchFiles: DispatchFile[] = fs.readdirSync(dispatchesDir)
  .filter((file: string) => file.endsWith('.md'))
  .map((file: string) => {
    const filePath = path.join(dispatchesDir, file);
    const fileStats = fs.statSync(filePath);
    
    // Extract date and generate slug
    const slug = file.replace('.md', '');
    const title = getFirstLine(filePath);
    
    return {
      slug,
      title,
      date: new Date(fileStats.birthtime).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }),
      filePath
    };
  })
  .sort((a: DispatchFile, b: DispatchFile) => {
    // Sort descending by name of the file
    return b.slug.localeCompare(a.slug);
  });
---

<html lang="en">
<head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/x-icon" href="/letter-e.png">
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{pageTitle}</title>
    <link href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;600&display=swap" rel="stylesheet">
</head>
<body>
    <Header />
    <main>
        <table>
            <thead>
                <tr>
                    <th class="post-date">date</th>
                    <th class="post-title">title</th>
                </tr>
            </thead>
            <tbody>
                {dispatchFiles.map((dispatch: DispatchFile) => (
                    <tr>
                        <td class="post-date">{dispatch.date}</td>
                        <td class="post-title">
                            <a href={`/dispatches/${dispatch.slug}`}>
                                {dispatch.title}
                            </a>
                        </td>
                    </tr>
                ))}
            </tbody>
        </table>
    </main>
</body>
</html>